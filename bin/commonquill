#!/usr/bin/env php
<?php

requireAutoloader();
ini_set('display_errors', 'stderr');

$options = array();
$options_raw = getopt('', array(
    'use-asterisk',
    'use-underscore',
    'enable-strong',
    'enable-em',
    'safe',
));

foreach ($options_raw as $option => $value) {
    switch ($option) {
        case 'use-asterisk':
        case 'use-underscore':
        case 'enable-strong':
        case 'enable-em':
        case 'safe':
            if ($value !== true && $value !== false) {
                fail("Invalid value '$value' for option '$option'");
            }
            break;
    }
    $options[str_replace('-', '_', $option)] = $value;
}

foreach ($argv as $i => $arg) {
    if ($i === 0) {
        continue;
    }

    if (substr($arg, 0, 1) === '-') {
        switch ($arg) {
            case '-h':
            case '--help':
                echo getHelpText();
                exit(0);
            case '--safe':
                $options['safe'] = true;
                break;
            default:
                $option = explode('=', $arg, 2)[0];
                if (!preg_match('/^--[^-]/', $option)
                    || !array_key_exists(ltrim($option, '-'), $options_raw)) {
                    fail('Unknown option: ' . $arg);
                }
        }
    } else {
        $src = $arg;
    }
}

if (isset($src)) {
    if (!file_exists($src)) {
        fail('File not found: ' . $src);
    }

    $markdown = file_get_contents($src);
} else {
    $stdin = fopen('php://stdin', 'r');

    if (stream_set_blocking($stdin, false)) {
        $markdown = stream_get_contents($stdin);
    }

    fclose($stdin);
    if (empty($markdown)) {
        fail(getHelpText());
    }
}

$converter = new \Everyday\CommonQuill\QuillConverter($options);
echo json_encode($converter->convertToQuill($markdown));

/**
 * Get help and usage info
 *
 * @return string
 */
function getHelpText()
{
    if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {
        return <<<WINDOWSHELP
CommonQuill - Markdown to Quill conversions done right

Usage: commonquill [OPTIONS] [FILE]
    -h, --help    Shows help and usage information
    
    -v, --version Shows the currently installed version
    
    (Reading data from STDIN is not currently supported on Windows)
    
Examples:
    Converting a file named document.md:
        commonquill document.md
        
    Converting a file and saving its output:
        commonquill document.md > output.json
        
Full documentation can be found at http://commonmark.thephpleague.com/
WINDOWSHELP;
    }
    return <<<HELP
CommonQuill - Markdown to Quill conversions done right

Usage: commonquill [OPTIONS] [FILE]

    -h, --help    Shows help and usage information
    
    -v, --version Shows the currently installed version
    
    --safe        Escapes all raw HTML input and removes unsafe URLs
    
    If no file is given, input will be read from STDIN
    
Examples:

    Converting a file named document.md:
        commonquill document.md
        
    Converting a file and saving its output:
        commonquill document.md > output.json
        
    Converting from STDIN:
        echo -e '# Hello World!' | commonquill
        
    Converting from STDIN and saving the output:
        echo -e '# Hello World!' | commonquill > output.html
        
Full documentation can be found at http://commonmark.thephpleague.com/
HELP;
}

/**
 * @param string $message Error message
 */
function fail($message)
{
    fwrite(STDERR, $message . "\n");

    exit(1);
}

function requireAutoloader()
{
    $autoloadPaths = [
        // Local package usage
        __DIR__ . '/../vendor/autoload.php',
        // Package was included as a library
        __DIR__ . '/../../../autoload.php',
    ];

    foreach ($autoloadPaths as $path) {
        if (file_exists($path)) {
            require_once $path;
            break;
        }
    }
}